/*
 * This file is part of Zql.
 *
 * Zql is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Zql is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Zql.  If not, see http://www.gnu.org/licenses.
 */

/* Generated By:JavaCC: Do not edit this line. ZqlJJParserConstants.java */
package org.gibello.zqlparser;

/**
 * @author Bogdan Mariesan, Romania
 */
public final class ZqlJJParserConstants {

	/**
	 * End of file.
	 */
	public static final int			EOF					= 0;

	/**
	 * All.
	 */
	public static final int			K_ALL				= 5;

	/**
	 * And.
	 */
	public static final int			K_AND				= 6;

	/**
	 * Any.
	 */
	public static final int			K_ANY				= 7;

	/**
	 * AS.
	 */
	public static final int			K_AS				= 8;

	/**
	 * Asc.
	 */
	public static final int			K_ASC				= 9;

	/**
	 * Avg.
	 */
	public static final int			K_AVG				= 10;

	/**
	 * Between.
	 */
	public static final int			K_BETWEEN			= 11;

	/**
	 * Binary integer.
	 */
	public static final int			K_BINARY_INTEGER	= 12;

	/**
	 * Boolean.
	 */
	public static final int			K_BOOLEAN			= 13;

	/**
	 * By.
	 */
	public static final int			K_BY				= 14;

	/**
	 * Char.
	 */
	public static final int			K_CHAR				= 15;

	/**
	 * Comment.
	 */
	public static final int			K_COMMENT			= 16;

	/**
	 * Commit.
	 */
	public static final int			K_COMMIT			= 17;

	/**
	 * Connect.
	 */
	public static final int			K_CONNECT			= 18;

	/**
	 * Count.
	 */
	public static final int			K_COUNT				= 19;

	/**
	 * Date.
	 */
	public static final int			K_DATE				= 20;

	/**
	 * Delete.
	 */
	public static final int			K_DELETE			= 21;

	/**
	 * Desc.
	 */
	public static final int			K_DESC				= 22;

	/**
	 * Distinct.
	 */
	public static final int			K_DISTINCT			= 23;

	/**
	 * Exclusive.
	 */
	public static final int			K_EXCLUSIVE			= 24;

	/**
	 * Exists.
	 */
	public static final int			K_EXISTS			= 25;

	/**
	 * Exit.
	 */
	public static final int			K_EXIT				= 26;

	/**
	 * FLoat.
	 */
	public static final int			K_FLOAT				= 27;

	/**
	 * For.
	 */
	public static final int			K_FOR				= 28;

	/**
	 * From.
	 */
	public static final int			K_FROM				= 29;

	/**
	 * Group.
	 */
	public static final int			K_GROUP				= 30;

	/**
	 * Having.
	 */
	public static final int			K_HAVING			= 31;

	/**
	 * In.
	 */
	public static final int			K_IN				= 32;

	/**
	 * Insert.
	 */
	public static final int			K_INSERT			= 33;

	/**
	 * Integer.
	 */
	public static final int			K_INTEGER			= 34;

	/**
	 * Intersect.
	 */
	public static final int			K_INTERSECT			= 35;

	/**
	 * Into.
	 */
	public static final int			K_INTO				= 36;

	/**
	 * Is.
	 */
	public static final int			K_IS				= 37;

	/**
	 * Like.
	 */
	public static final int			K_LIKE				= 38;

	/**
	 * Lock.
	 */
	public static final int			K_LOCK				= 39;

	/**
	 * Max.
	 */
	public static final int			K_MAX				= 40;

	/**
	 * Min.
	 */
	public static final int			K_MIN				= 41;

	/**
	 * Minus.
	 */
	public static final int			K_MINUS				= 42;

	/**
	 * Mode.
	 */
	public static final int			K_MODE				= 43;

	/**
	 * Natural.
	 */
	public static final int			K_NATURAL			= 44;

	/**
	 * Not.
	 */
	public static final int			K_NOT				= 45;

	/**
	 * No wait.
	 */
	public static final int			K_NOWAIT			= 46;

	/**
	 * Null.
	 */
	public static final int			K_NULL				= 47;

	/**
	 * Number.
	 */
	public static final int			K_NUMBER			= 48;

	/**
	 * Of.
	 */
	public static final int			K_OF				= 49;

	/**
	 * Only.
	 */
	public static final int			K_ONLY				= 50;

	/**
	 * Or.
	 */
	public static final int			K_OR				= 51;

	/**
	 * Order.
	 */
	public static final int			K_ORDER				= 52;

	/**
	 * Prior.
	 */
	public static final int			K_PRIOR				= 53;

	/**
	 * Quit.
	 */
	public static final int			K_QUIT				= 54;

	/**
	 * Read.
	 */
	public static final int			K_READ				= 55;

	/**
	 * Real.
	 */
	public static final int			K_REAL				= 56;

	/**
	 * Rollback.
	 */
	public static final int			K_ROLLBACK			= 57;

	/**
	 * Row.
	 */
	public static final int			K_ROW				= 58;

	/**
	 * Select.
	 */
	public static final int			K_SELECT			= 59;

	/**
	 * Set.
	 */
	public static final int			K_SET				= 60;

	/**
	 * Share.
	 */
	public static final int			K_SHARE				= 61;

	/**
	 * Small int.
	 */
	public static final int			K_SMALLINT			= 62;

	/**
	 * Start.
	 */
	public static final int			K_START				= 63;

	/**
	 * Sum.
	 */
	public static final int			K_SUM				= 64;

	/**
	 * Table.
	 */
	public static final int			K_TABLE				= 65;

	/**
	 * Transaction.
	 */
	public static final int			K_TRANSACTION		= 66;

	/**
	 * Union.
	 */
	public static final int			K_UNION				= 67;

	/**
	 * Update.
	 */
	public static final int			K_UPDATE			= 68;

	/**
	 * Values.
	 */
	public static final int			K_VALUES			= 69;

	/**
	 * Varchar 2.
	 */
	public static final int			K_VARCHAR2			= 70;

	/**
	 * Varchar.
	 */
	public static final int			K_VARCHAR			= 71;

	/**
	 * Where.
	 */
	public static final int			K_WHERE				= 72;

	/**
	 * With.
	 */
	public static final int			K_WITH				= 73;

	/**
	 * Work.
	 */
	public static final int			K_WORK				= 74;

	/**
	 * Write.
	 */
	public static final int			K_WRITE				= 75;

	/**
	 * Number.
	 */
	public static final int			S_NUMBER			= 76;

	/**
	 * Float.
	 */
	public static final int			FLOAT				= 77;

	/**
	 * Integer.
	 */
	public static final int			INTEGER				= 78;

	/**
	 * Digit.
	 */
	public static final int			DIGIT				= 79;

	/**
	 * Line comment.
	 */
	public static final int			LINE_COMMENT		= 80;

	/**
	 * Multi line comment.
	 */
	public static final int			MULTI_LINE_COMMENT	= 81;

	/**
	 * Identifier.
	 */
	public static final int			S_IDENTIFIER		= 82;

	/**
	 * Letter.
	 */
	public static final int			LETTER				= 83;

	/**
	 * Special chars.
	 */
	public static final int			SPECIAL_CHARS		= 84;

	/**
	 * Bind.
	 */
	public static final int			S_BIND				= 85;

	/**
	 * Char literal.
	 */
	public static final int			S_CHAR_LITERAL		= 86;

	/**
	 * Quoted identifier.
	 */
	public static final int			S_QUOTED_IDENTIFIER	= 87;

	/**
	 * Default.
	 */
	public static final int			DEFAULT				= 0;

	/**
	 * Token image.
	 */
	public static final String[]	TOKEN_IMAGE			= {"<EOF>", "\" \"", "\"\\t\"", "\"\\r\"", "\"\\n\"",
			"\"ALL\"", "\"AND\"", "\"ANY\"", "\"AS\"", "\"ASC\"", "\"AVG\"", "\"BETWEEN\"", "\"BINARY_INTEGER\"",
			"\"BOOLEAN\"", "\"BY\"", "\"CHAR\"", "\"COMMENT\"", "\"COMMIT\"", "\"CONNECT\"", "\"COUNT\"", "\"DATE\"",
			"\"DELETE\"", "\"DESC\"", "\"DISTINCT\"", "\"EXCLUSIVE\"", "\"EXISTS\"", "\"EXIT\"", "\"FLOAT\"",
			"\"FOR\"", "\"FROM\"", "\"GROUP\"", "\"HAVING\"", "\"IN\"", "\"INSERT\"", "\"INTEGER\"", "\"INTERSECT\"",
			"\"INTO\"", "\"IS\"", "\"LIKE\"", "\"LOCK\"", "\"MAX\"", "\"MIN\"", "\"MINUS\"", "\"MODE\"", "\"NATURAL\"",
			"\"NOT\"", "\"NOWAIT\"", "\"NULL\"", "\"NUMBER\"", "\"OF\"", "\"ONLY\"", "\"OR\"", "\"ORDER\"",
			"\"PRIOR\"", "\"QUIT\"", "\"READ\"", "\"REAL\"", "\"ROLLBACK\"", "\"ROW\"", "\"SELECT\"", "\"SET\"",
			"\"SHARE\"", "\"SMALLINT\"", "\"START\"", "\"SUM\"", "\"TABLE\"", "\"TRANSACTION\"", "\"UNION\"",
			"\"UPDATE\"", "\"VALUES\"", "\"VARCHAR2\"", "\"VARCHAR\"", "\"WHERE\"", "\"WITH\"", "\"WORK\"",
			"\"WRITE\"", "<S_NUMBER>", "<FLOAT>", "<INTEGER>", "<DIGIT>", "<LINE_COMMENT>", "<MULTI_LINE_COMMENT>",
			"<S_IDENTIFIER>", "<LETTER>", "<SPECIAL_CHARS>", "<S_BIND>", "<S_CHAR_LITERAL>", "<S_QUOTED_IDENTIFIER>",
			"\"(\"", "\",\"", "\")\"", "\";\"", "\"=\"", "\".\"", "\"!=\"", "\"#\"", "\"<>\"", "\">\"", "\">=\"",
			"\"<\"", "\"<=\"", "\"+\"", "\"-\"", "\"*\"", "\".*\"", "\"?\"", "\"||\"", "\"/\"", "\"**\""};

	/**
	 * Default constructor.
	 */
	private ZqlJJParserConstants() {

	}

}
